version: '3.9'

services:
  # ============================================
  # Next.js Application Service (Production)
  # ============================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: work-management-app-prod
    ports:
      - "3000:3000"
    environment:
      # Database connection (uses db service)
      - POSTGRES_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/work_management
      - POSTGRES_URL_NON_POOLING=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/work_management
      # NextAuth.js configuration
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      # Production settings
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================
  # PostgreSQL Database Service (Production)
  # ============================================
  db:
    image: postgres:15-alpine
    container_name: work-management-db-prod
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=work_management
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      # Persistent data storage
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d work_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: always

# ============================================
# Volumes for data persistence (Production)
# ============================================
volumes:
  postgres_data_prod:
    driver: local

# ============================================
# Network configuration
# ============================================
networks:
  app-network:
    driver: bridge
