table accounts {
  user_id uuid [not null]
  type varchar(255) [not null]
  provider varchar(255) [not null]
  provider_account_id varchar(255) [not null]
  refresh_token text
  access_token text
  expires_at integer
  token_type varchar(255)
  scope varchar(255)
  id_token text
  session_state varchar(255)

  indexes {
    (provider, provider_account_id) [pk]
  }
}

table projects {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name varchar(255) [not null, unique]
  description text
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    is_active [name: 'projects_is_active_idx']
  }
}

table sessions {
  session_token varchar(255) [pk, not null]
  user_id uuid [not null]
  expires timestamp [not null]
}

table team_members {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  team_id uuid [not null]
  user_id uuid [not null]
  role varchar(50) [not null, default: 'member']
  joined_at timestamp [not null, default: `now()`]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (team_id, user_id) [name: 'team_members_team_user_idx']
    user_id [name: 'team_members_user_idx']
    (team_id, user_id) [name: 'team_members_team_user_unique', unique]
  }
}

table teams {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name varchar(255) [not null, unique]
  description text
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    is_active [name: 'teams_is_active_idx']
  }
}

table users {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name varchar(255)
  email varchar(255) [not null, unique]
  email_verified timestamp
  image varchar(2048)
  password_hash varchar(255)
  role varchar(50) [not null, default: 'user']
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table verification_tokens {
  identifier varchar(255) [not null]
  token varchar(255) [not null, unique]
  expires timestamp [not null]

  indexes {
    (identifier, token) [pk]
  }
}

table work_categories {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name varchar(255) [not null, unique]
  description text
  display_order integer [not null, default: 0]
  is_active boolean [not null, default: true]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (is_active, display_order) [name: 'work_categories_is_active_display_order_idx']
  }
}

table work_logs {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  user_id uuid [not null]
  date timestamp [not null]
  hours varchar(10) [not null]
  project_id uuid [not null]
  category_id uuid [not null]
  details text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]

  indexes {
    (user_id, date) [name: 'work_logs_user_id_date_idx']
    project_id [name: 'work_logs_project_id_idx']
    category_id [name: 'work_logs_category_id_idx']
    (date, user_id) [name: 'work_logs_date_user_idx']
    (project_id, category_id) [name: 'work_logs_project_category_idx']
    details [name: 'work_logs_details_gin_idx']
  }
}

ref accounts_user_id_users_id_fk: accounts.user_id > users.id [delete: cascade, update: no action]

ref sessions_user_id_users_id_fk: sessions.user_id > users.id [delete: cascade, update: no action]

ref team_members_team_id_teams_id_fk: team_members.team_id > teams.id [delete: cascade, update: no action]

ref team_members_user_id_users_id_fk: team_members.user_id > users.id [delete: cascade, update: no action]

ref work_logs_user_id_users_id_fk: work_logs.user_id > users.id [delete: cascade, update: no action]

ref work_logs_project_id_projects_id_fk: work_logs.project_id > projects.id [delete: restrict, update: no action]

ref work_logs_category_id_work_categories_id_fk: work_logs.category_id > work_categories.id [delete: restrict, update: no action]